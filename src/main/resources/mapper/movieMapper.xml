<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="movieMapper" >
	<insert id="insertrev" useGeneratedKeys="true" keyProperty="mrevno"> 
		<selectKey keyProperty="mRevNo" resultType="int" order="BEFORE">
			select m_rev_seq.nextval from dual
		</selectKey>
		insert into m_rev(m_rev_no, username, m_no, rating, m_rev_content, is_spo, writing_date, genre, is_blind,like_cnt,rep_cnt)
		values(#{mRevNo},#{username},#{mNo},#{rating},#{mRevContent},#{isSpo},
		sysdate, #{genre}, 0, #{likeCnt},#{repCnt}) 
	</insert>
	
	<select id="findCount" resultType="int" parameterType="long">
		select /*+ index_ffs(m_rev m_rev_pk_m_rev_no) */ count(m_rev_no) from m_rev where m_no=#{mno}
	</select>
	
	<select id="findAll" resultType="moviereview">
		<![CDATA[
			select * from
		       	(select rownum rnum, b.* from 
		       		(select /*+ index_desc(m_rev m_rev_pk_m_rev_no) */ m_rev_no mRevNo, username, m_no mNo, rating,m_rev_content mRevContent , is_spo isSpo, writing_date writingDate, genre, is_blind isBlind, like_cnt likeCnt, rep_cnt repCnt from m_rev) b
		       	where rownum<=#{endRowNum}) 
		    where rnum>=#{startRowNum} 
		]]>
	</select>
	
	<select id="findCountByUsername" resultType="int">
		select /*+ index_ffs(m_rev m_rev_pk_m_rev_no) */ count(m_rev_no) from m_rev where m_no = #{mNo}
	</select>
	
	<select id="findAllByUsername" resultType="moviereview">
		<![CDATA[
			select * from
		       	(select rownum rnum, b.* from 
		       		(select /*+ index_desc(m_rev m_rev_pk_m_rev_no) */ m_rev_no mRevNo, username, m_no mNo, rating,m_rev_content mRevContent , is_spo isSpo, writing_date writingDate, genre, is_blind isBlind, like_cnt likeCnt, rep_cnt repCnt from m_rev where username=#{username}) b
		       	where rownum<=#{endRowNum}) 
		    where rnum>=#{startRowNum}
		]]>
	</select>
	
	<resultMap type="com.icia.moviefactory.entity.MovieReviewComment" id="mapForComments">
		<id property="mRevCmntNo" column="mRevCmntNo" />
		<result property="mRevNo" column="mRevNo" />
		<result property="username" column="commentUsername" />
		<result property="content" column="commentContent" />
		<result property="writingDate" column="commentWritingDate" />
		<result property="cmntLikeCnt" column="cmntLikeCnt" />
		<result property="cmntRepCnt" column="cmntRepCnt" />
	</resultMap>
	
	<resultMap type="hashmap" id="mapForRead" >
		<id property="mRevNo" column="mRevNo1"/>
		<result property="username" column="username" />
		<result property="mNo" column="mNo" />
		<result property="rating" column="rating" />
		<result property="mRevContent" column="mRevContent" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="isSpo" column="isSpo" />
		<result property="writingDate" column="writingDate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
		<result property="genre" column="genre" />
		<result property="likeCnt" column="likeCnt" />
		<result property="repCnt" column="repCnt" />
		<collection property="comments" javaType="java.util.ArrayList" resultMap="mapForComments"/>
	</resultMap>
	
	<select id="findByIdWithComments" resultMap="mapForRead">
		<![CDATA[
			select m.m_rev_no mRevNo1, m.username, m.m_no mNo, m.rating, m.m_rev_content mRevContent,m.is_spo isSpo , m.writing_date writingDate , m.genre, m.is_blind isBlind, m.like_cnt likeCnt, m.rep_cnt repCnt,c.m_rev_cmnt_no mRevCmntNo, c.m_rev_no CmRevNo, c.username commentUsername, c.content commentContent, c.writing_date commentWritingDate,c.cmnt_like_cnt cmntLikeCnt,c.cmnt_rep_cnt cmntRepCnt from m_rev m, m_cmnt c where m.m_rev_no=#{mRevNo} and m.m_rev_no=c.m_rev_no(+) order by m_rev_cmnt_no desc
		]]>
	</select>
	
	<select id="findUsernameById" resultType="string">
		select username from m_rev where m_rev_no=#{mRevNo} and rownum = 1
	</select>
	
	<select id="findUsernameByIds" resultType="string">
		select username from m_rev where m_no=#{mNo} and username=#{username}
	</select>
	
	<select id="findUsernameByCmntNo" resultType="string">
		select username from m_cmnt where m_rev_cmnt_no=#{mRevCmntNo} and rownum = 1
	</select>
	
	<update id="updaterev"> update m_rev set m_rev_content=#{mRevContent} where
		m_rev_no=#{mRevNo} </update>

	<delete id="deleterev"> delete from m_rev where m_rev_no=#{mRevNo} </delete>

	<update id="updatelikecnt">
		update m_rev set like_cnt = like_cnt+1 where m_rev_no = #{mRevNo}
	</update>

	<select id="findLikeCnt" resultType="int">
		select like_cnt from m_rev where m_rev_no=#{mRevNo}
	</select>
	
	<insert id="insertrep">
		insert into m_rev_rep values(#{mRevNo},#{title},#{content},sysdate,#{mRepCate})
	</insert>
	
	<update id="updaterepcnt">
		update m_rev set rep_cnt = rep_cnt+1 where m_rev_no=#{mRevNo}
	</update>
	
	<select id="findReportCnt" resultType="int">
		select rep_cnt from m_rev where m_rev_no=#{mRevNo}
	</select>
	
	<update id="updatecmntrepcnt">
		update m_cmnt set cmnt_rep_cnt = cmnt_rep_cnt+1 where m_rev_cmnt_no=#{mRevCmntNo}
	</update>
	
	<select id="findCmntReportCnt" resultType="int">
		select cmnt_rep_cnt from m_cmnt where m_rev_cmnt_no=#{mRevCmntNo}
	</select>
	
	<insert id="insertcmnt"> 
		insert into m_cmnt(m_rev_cmnt_no, m_rev_no,username, content, is_blind, writing_date, cmnt_like_cnt,cmnt_rep_cnt) 
		values(m_rev_comn_seq.nextval,#{mRevNo},#{username},#{content},#{isBlind},sysdate,#{cmntLikeCnt},#{cmntRepCnt})
	</insert>
		
	<select id="findByCmntByMRevNo" resultType="moviereviewcomment">
		select m_rev_cmnt_no,m_rev_no,username,content,writing_date from m_cmnt where m_rev_no=#{mRevNo} and rownum=1 order by m_rev_cmnt_no desc
	</select>	
	
	<delete id="deleteByMRevNo">
		delete from m_cmnt where m_rev_no=#{mRevNo}
	</delete>

	<update id="updaterevcmnt"> update m_cmnt set content=#{content} where
		m_rev_cmnt_no=#{mRevCmntNo} </update>

	<delete id="deleterevcmnt"> delete from m_cmnt where
		m_rev_cmnt_no=#{mRevCmntNo}  and rownum=1 </delete>

	<insert id="insertcmntlike"> 
		insert into m_cmnt_like(cmnt_like_no, m_rev_cmnt_no, username, like_reg_date)
		values(#{cmntLikeNo},#{mRevCmntNo},#{username},sysdate) </insert>

	<update id="updatecmntlike">
		update m_cmnt set cmnt_like_cnt = cmnt_like_cnt+1 where m_rev_cmnt_no = #{mRevCmntNo}
	</update>
	
	<select id="findCmntlikecnt" resultType="int">
		select cmnt_like_cnt from m_cmnt where m_rev_cmnt_no=#{mRevCmntNo} 
	</select>

	<insert id="insertcmntrep"> insert into m_cmnt_rep(m_rev_cmnt_no, username,
		title, content, writing_date, m_rep_cate)
		values(#{mRevCmntNo},#{username},#{title},#{content},sysdate,#{mRepCate})
	</insert>
	
	<select id="reviewList" resultType="moviereview">
		select m_rev_no mRevNo,username,m_rev_content mRevContent,is_spo isSpo from m_rev where m_no=#{mNo} order by m_rev_no desc
	</select>


	<select id="myReview" resultType="moviereview">
		select m_rev_no mRevNo,username,m_rev_content mRevContent from m_rev where m_no=#{mNo} and username = #{username} and rownum=1
	</select>

	<select id="movieavgrating" resultType="double">
		select avg(rating) from m_rev where m_no=#{mNo} group by m_no
	</select>


</mapper>