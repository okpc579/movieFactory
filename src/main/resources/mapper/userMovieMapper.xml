<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMovieMapper">
	

	<!-- 1.영화 마이 페이지 보기 -->	
	<select id="findByUsernameMoviePage" resultType="member">
		select username, nick, photo,  from user where username=#{username}
	</select>
	
	<!-- 2.유저 페이지 보기 -->	
	<select id="findByUsernameUserPage" resultType="member">
		select username, nick, photo,  from user where username=#{username}
	</select>
	
	<!-- 3.컬렉션 목록보기 -->	
	<select id="findByUsernameCollectionList" resultType="collections">
	<!-- mybatis type alias="collections" 과 resultType="collections" 과 타입이 같아야 한다.-->
		select username, coll_no collNo, coll_name collName, coll_intro collIntro from coll where username=#{username}
	</select>
	
	<!-- 4.유저리뷰 목록보기 -->
	<select id="findUserReviewList" resultType="moviereview">
		select username, m_rev_no mRevNo, rating, m_rev_content mRevContent, m_no mNo from m_rev where username=#{username}
	</select>
	
	<!-- 5.팔로잉(내가 그사람에게 친구를 검, 내가 팔로우 하는 사람) 목록보기 (ㅇㅇ,ㅌㅎ) -->	
	<select id="findFollowingList" resultType="follow"><!-- 안되면 follows로 바꿔라 -->
		select following_username followingUsername, follower_username followerUsername from follow where follower_username=#{followerUsername} and following_username=#{loginname}
	</select>
	
	<!-- 6.팔로워(그 사람이 친구를 건 사람들, 나를 팔로우 하는 사람) 목록보기 (ㅇㅇ,ㅌㅎ) -->	
	<select id="findFollowerList" resultType="follow">
		select following_username followingUsername, follower_username followerUsername from follow where following_username=#{followingUsername} and follower_username=#{loginname}
	</select>
	
	<!-- 7.평점(영화?) 상위보기 -->	
	<select id="findAverageRating" resultType="moviereview">
		<![CDATA[
			select m.* from (
    		select m_no mNo, avg(rating) rating2 from m_rev
    		group by m_no order by avg(rating) desc
			)
			m where rownum<=5
		]]>
	</select>
	
	<!-- 8.유저 고평점(영화?) top5 상위보기 -->	
	<select id="findUserTopRating" resultType="moviereview">
		<![CDATA[
		select m.* from (
    		select m_no mNo, avg(rating) rating2 from m_rev where m_rev.username = #{username}
    		group by m_no order by avg(rating) desc
			)
			m where rownum<=5
		]]>
	</select>	
	
	<!-- 9.장르별 평점 상위보기 -->	
	<select id="findGenretoprating" resultType="moviereview">
		<![CDATA[
		select m.* from (
			select m_no mNo, avg(rating) rating2 from m_rev where m_rev.genre = #{genre}
    		group by m_no                            
    		order by avg(rating) desc
    		)
    		m where rownum<=5
		]]>
	</select>
	
	<!-- 10.좋아하는 영화 추가 (지요)-->
	<insert id="insertFavoriteMovie">		
		insert into fav_m(m_no,username,writing_date) 
		values(#{mNo},#{username},sysdate)
	</insert>
	
	<!-- 11.좋아하는 영화 삭제 (지요)-->	
	<delete id="deleteFavoriteMovie">
		delete from fav_m where m_no=#{mNo} and username=#{username}
	</delete>
	
	<!-- 12.좋아하는 영화 목록보기 (ㅌㅎ)-->	
	<select id="favoriteMovieList" resultType="favoritemovie">
		select m_no mNo, username,writing_date writingDate from fav_m where username=#{username}
	</select>
	
	<!-- 13.내 선호영화 예상 목록보기 -->	
	<select id="findPreferenceMovieList" resultType="moviereview">
	<![CDATA[
		select m_no mNo, avg(rating) rating2 from m_rev where m_rev.genre = (select r.genre from (select avg(rating) avgrating, genre from m_rev where username=#{username} group by genre) r, (select max(avg(rating)) maxrating from m_rev where username=#{username} group by genre) r2 where r.avgrating=r2.maxrating)
		    		group by m_no                            
		    		order by avg(rating) desc
		    		]]>
	</select>
	<!-- <resultMap type="com.icia.moviefactory.entity.FavoriteMovieDetail" id="mapForFavoriteMovieDetail">
		<id property="mNo" column="m_no" />
		<result property="writingDate" column="writing_date" />
	</resultMap>
	
	<resultMap type="hashmap" id="mapForFavorite" >
		<id property="mLikeNo" column="m_like_no"/>
		<result property="username" column="username" />
		<favoritemovie property="detail" javaType="java.util.ArrayList" resultMap="mapForFavoriteDetail"/>
	</resultMap> -->
	<select id="findNicknameByUsername" resultType="string">
		select nick from member where username=#{username}
	</select>
	
	<insert id="addfollowing">
		insert into follow(follower_username, following_username) 
		values(#{loginname}, #{username})
	</insert>
	<delete id="deletefollowing">
		delete from follow where follower_username=#{loginname} and following_username=#{username}
	</delete>
	
	<select id="checkwritereview" resultType="moviereview">
		select m_no mNo, rating from m_rev where m_no=#{mNo} and username=#{username}
	</select>
	
	<select id="checkfollowing" resultType="string">
		select follower_username followerUsername from follow where follower_username=#{loginname} and following_username=#{username} 
	</select>
	
	<select id="checkFavoriteMovie"	resultType="string">
		select username from fav_m where m_no=#{mNo} and username=#{username}
	</select>
	
</mapper>